--- liveusb-creator-3.11.6/liveusb/creator.py.old	2011-11-02 23:31:39.000000000 +0400
+++ liveusb-creator-3.11.6/liveusb/creator.py	2011-12-31 09:33:38.920648145 +0400
@@ -678,7 +678,7 @@
         """ Run syslinux to install the bootloader on our devices """
         LiveUSBCreator.install_bootloader(self)
         self.log.info(_("Installing bootloader..."))
-        syslinux_path = os.path.join(self.dest, "syslinux")
+        syslinux_path = os.path.join(self.dest, "isolinux")
         shutil.move(os.path.join(self.dest, "isolinux"), syslinux_path)
         os.unlink(os.path.join(syslinux_path, "isolinux.cfg"))
 
@@ -686,7 +686,7 @@
         for com32mod in ('vesamenu.c32', 'menu.c32'):
             copied = False
             for path in ('/usr/share', '/usr/lib'):
-                com32path = os.path.join(path, 'syslinux', com32mod)
+                com32path = os.path.join(path, 'isolinux', com32mod)
                 if os.path.isfile(com32path):
                     self.log.debug('Copying %s on to stick' % com32path)
                     shutil.copyfile(com32path, os.path.join(syslinux_path, com32mod))
@@ -697,7 +697,7 @@
 
         # Don't prompt about overwriting files from mtools (#491234)
         for ldlinux in [os.path.join(self.dest, p, 'ldlinux.sys')
-                        for p in ('syslinux', '')]:
+                        for p in ('isolinux', '')]:
             self.log.debug('Looking for %s' % ldlinux)
             if os.path.isfile(ldlinux):
                 self.log.debug(_("Removing") + " %s" % ldlinux)
@@ -710,7 +710,7 @@
         else: # FAT
             self.popen('syslinux%s%s -d %s %s' %  (self.opts.force and
                        ' -f' or '', self.opts.safe and ' -s' or '',
-                       'syslinux', self.drive['device']))
+                       'isolinux', self.drive['device']))
 
     def get_free_bytes(self, device=None):
         """ Return the number of available bytes on our device """
@@ -1015,7 +1015,7 @@
         LiveUSBCreator.install_bootloader(self)
         self.log.info(_("Installing bootloader"))
         device = self.drive['device']
-        syslinuxdir = os.path.join(device + os.path.sep, "syslinux")
+        syslinuxdir = os.path.join(device + os.path.sep, "isolinux")
         if os.path.isdir(syslinuxdir):
             # Python for Windows is unable to delete read-only files, and some
             # may exist here if the LiveUSB stick was created in Linux
@@ -1034,7 +1034,7 @@
                 os.unlink(ldlinux)
 
         self.popen('syslinux%s%s -m -a -d %s %s' %  (self.opts.force and ' -f'
-                   or '', self.opts.safe and ' -s' or '', 'syslinux', device))
+                   or '', self.opts.safe and ' -s' or '', 'isolinux', device))
 
     # Cache these, because they are fairly expensive
     _win32_logicaldisk = {}
@@ -1194,9 +1194,9 @@
         checksums = []
         for img in (os.path.join('LiveOS', 'osmin.img'),
                     os.path.join('LiveOS', 'squashfs.img'),
-                    os.path.join('syslinux', 'initrd0.img'),
-                    os.path.join('syslinux', 'vmlinuz0'),
-                    os.path.join('syslinux', 'isolinux.bin')):
+                    os.path.join('isolinux', 'initrd0.img'),
+                    os.path.join('isolinux', 'vmlinuz0'),
+                    os.path.join('isolinux', 'isolinux.bin')):
             hash = getattr(hashlib, self.opts.hash, 'sha1')()
             liveos = os.path.join(self.drive['device'], img)
             device = file(liveos, 'rb')
